<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-06T18:06:50 IST" name="Suite" finished-at="2025-01-06T18:12:23 IST" duration-ms="333371">
    <groups>
    </groups>
    <test started-at="2025-01-06T18:06:50 IST" name="Test" finished-at="2025-01-06T18:12:23 IST" duration-ms="333371">
      <class name="com.test.Botlist">
        <test-method is-config="true" signature="browser_launch()[pri:0, instance:com.test.Botlist@17f9d882]" started-at="2025-01-06T18:10:37 IST" name="browser_launch" finished-at="2025-01-06T18:10:47 IST" duration-ms="9129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser_launch -->
        <test-method signature="LoginSuccess()[pri:1, instance:com.test.Botlist@17f9d882]" started-at="2025-01-06T18:10:47 IST" name="LoginSuccess" finished-at="2025-01-06T18:10:53 IST" duration-ms="6079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginSuccess -->
        <test-method signature="BotCreateSuccess()[pri:2, instance:com.test.Botlist@17f9d882]" started-at="2025-01-06T18:10:53 IST" name="BotCreateSuccess" finished-at="2025-01-06T18:11:23 IST" duration-ms="30320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BotCreateSuccess -->
        <test-method signature="txtfilesync()[pri:3, instance:com.test.Botlist@17f9d882]" started-at="2025-01-06T18:11:23 IST" name="txtfilesync" finished-at="2025-01-06T18:11:51 IST" duration-ms="28150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- txtfilesync -->
        <test-method signature="txtcontentfilesync()[pri:4, instance:com.test.Botlist@17f9d882]" started-at="2025-01-06T18:11:51 IST" name="txtcontentfilesync" finished-at="2025-01-06T18:12:09 IST" duration-ms="17591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- txtcontentfilesync -->
        <test-method signature="chatbotspreview()[pri:5, instance:com.test.Botlist@17f9d882]" started-at="2025-01-06T18:12:09 IST" name="chatbotspreview" finished-at="2025-01-06T18:12:21 IST" duration-ms="12534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chatbotspreview -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.test.Botlist@17f9d882]" started-at="2025-01-06T18:12:21 IST" name="quit" finished-at="2025-01-06T18:12:23 IST" duration-ms="1662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.test.Botlist -->
      <class name="com.test.Login">
        <test-method is-config="true" signature="browser_launch()[pri:0, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:06:50 IST" name="browser_launch" finished-at="2025-01-06T18:07:15 IST" duration-ms="25611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser_launch -->
        <test-method signature="RegisterInvalidEmail()[pri:1, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:07:15 IST" name="RegisterInvalidEmail" finished-at="2025-01-06T18:07:18 IST" duration-ms="3211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterInvalidEmail -->
        <test-method signature="RegisterPasswordEmpty()[pri:2, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:07:18 IST" name="RegisterPasswordEmpty" finished-at="2025-01-06T18:07:20 IST" duration-ms="1555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterPasswordEmpty -->
        <test-method signature="RegisterSuccess()[pri:3, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:07:20 IST" name="RegisterSuccess" finished-at="2025-01-06T18:08:01 IST" duration-ms="41309" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.test.Login.RegisterSuccess(Login.java:124)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterSuccess -->
        <test-method signature="LoginInvalidEmail()[pri:4, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:08:01 IST" name="LoginInvalidEmail" finished-at="2025-01-06T18:08:04 IST" duration-ms="2250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginInvalidEmail -->
        <test-method signature="LoginInvalidcredentials()[pri:5, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:08:04 IST" name="LoginInvalidcredentials" finished-at="2025-01-06T18:08:45 IST" duration-ms="41439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginInvalidcredentials -->
        <test-method signature="LoginSuccess()[pri:6, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:08:45 IST" name="LoginSuccess" finished-at="2025-01-06T18:08:51 IST" duration-ms="5661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginSuccess -->
        <test-method signature="BotEmptyFieldValidation()[pri:7, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:08:51 IST" name="BotEmptyFieldValidation" finished-at="2025-01-06T18:09:00 IST" duration-ms="9325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BotEmptyFieldValidation -->
        <test-method signature="BotCreateSuccess()[pri:8, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:09:00 IST" name="BotCreateSuccess" finished-at="2025-01-06T18:09:42 IST" duration-ms="42353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BotCreateSuccess -->
        <test-method signature="BotUpdateEmptyValidation()[pri:9, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:09:42 IST" name="BotUpdateEmptyValidation" finished-at="2025-01-06T18:09:50 IST" duration-ms="7416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BotUpdateEmptyValidation -->
        <test-method signature="BotUpdateSuccess()[pri:10, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:09:50 IST" name="BotUpdateSuccess" finished-at="2025-01-06T18:10:33 IST" duration-ms="42817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BotUpdateSuccess -->
        <test-method signature="Botdelete()[pri:11, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:10:33 IST" name="Botdelete" finished-at="2025-01-06T18:10:36 IST" duration-ms="3743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Botdelete -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.test.Login@53fb3dab]" started-at="2025-01-06T18:10:36 IST" name="quit" finished-at="2025-01-06T18:10:37 IST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.test.Login -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
